generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DocumentType {
  CONTRATO                                  @map("148")
  FATURA                                    @map("31")
  NFE_SERVICOS_TERCEIROS_AVULSA             @map("150")
  NFSE_SERVICOS_TERCEIROS                   @map("77")
  NFSE_SERVICOS_TERCEIROS_ELETRONICA        @map("219")
  NOTA_DE_DEBITO                            @map("154")
  NOTA_FISCAL_DE_SERVICO_DE_COMUNICACAO     @map("147")
  NOTA_FISCAL_DE_SERVICO_DE_TELECOMUNICACAO @map("221")
  NOTA_FISCAL_DE_SERVICOS_SERIE_A           @map("117")
  NOTA_FISCAL_DE_SERVICOS_DE_TERCEIROS      @map("16")
  RECIBO                                    @map("4")
  RECIDO_DE_TERCEIROS                       @map("5")
}

model Receipt {
  id                  String        @id @default(uuid())
  filename            String?
  status              String
  image               String?
  customer            String?
  supplier            String?
  receiptValueInCents Int?
  issValueInCents     Int?
  receiptNumber       String?
  documentType        DocumentType?
  issueDate           DateTime?
  accrualDate         DateTime?
  items               ReceiptItem[]

  // @@unique([supplier, receiptNumber])
  @@map("receipts")
}

model ReceiptItem {
  id               Int    @id @default(autoincrement())
  code             String
  name             String
  purpose          Int
  costCenter       Int
  activity         Int
  quantity         Int
  unitPriceInCents Int

  receipt   Receipt @relation(fields: [receiptId], references: [id])
  receiptId String

  @@map("receipt_items")
}
